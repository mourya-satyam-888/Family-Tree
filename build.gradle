plugins {
    id "application"
}
group 'org.familytree'
version '1.0-SNAPSHOT'
apply plugin: "java"
ext {
    javaMainClass = "org.familytree.Main"
}

application {
    mainClassName = javaMainClass
}
run {
    standardInput = System.in
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
    implementation 'jakarta.el:jakarta.el-api:5.0.1'
    implementation 'org.hibernate:hibernate-validator-cdi:8.0.0.Final'
    implementation 'org.glassfish:jakarta.el:4.0.1'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    //Test dependency
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.mockito:mockito-inline:4.1.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.1.0'
}

test {
    useJUnitPlatform()
}
allprojects {
    apply plugin: 'checkstyle'
    tasks.withType(Checkstyle) {
        showViolations true
    }
    checkstyle {
        toolVersion '8.11'
        sourceSets = [project.sourceSets.main]
    }
    // Fails gradle build when checkstyle violation occurs
    tasks.withType(Checkstyle).each { checkstyleTask ->
        checkstyleTask.doLast {
            reports.all { report ->
                def outputFile = report.destination
                if (outputFile.exists() && outputFile.text.contains("<error ")) {
                    throw new GradleException("There were checkstyle warnings! For more info check $outputFile")
                }
            }
        }
    }

    apply plugin: 'pmd'

    pmd {
        consoleOutput = true
        toolVersion = '6.26.0'
        ruleSets = []
        ruleSetFiles = files("$rootDir/config/pmd/ruleset.xml")
    }
}